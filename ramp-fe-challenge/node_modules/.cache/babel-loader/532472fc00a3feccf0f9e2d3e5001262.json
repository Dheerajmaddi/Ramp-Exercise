{"ast":null,"code":"var _jsxFileName = \"/Users/dheeraj/Downloads/Ramp/Ramp-Exercise/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  _s();\n\n  let {\n    transaction,\n    loading,\n    setTransactionApproval: consumerSetTransactionApproval\n  } = _ref;\n  const [approved, setApproved] = useState(transaction.approved);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" -\", \" \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: async newValue => {\n        await consumerSetTransactionApproval({\n          transactionId: transaction.id,\n          newValue\n        });\n        consumerSetTransactionApproval({\n          transactionId: transaction.id,\n          newValue: newValue\n        }).then(result => console.log(\"CC \" + result));\n        setApproved(newValue);\n        transaction.approved = approved;\n        console.log(\"set Approved: \" + newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionPane, \"KPAjtgwy0mvFAelnTZhq541SWIA=\");\n\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useState","InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","approved","setApproved","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","id","newValue","transactionId","then","result","console","log","Intl","NumberFormat","style","currency"],"sources":["/Users/dheeraj/Downloads/Ramp/Ramp-Exercise/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { TransactionPaneComponent } from \"./types\";\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n  const [approved, setApproved] = useState(transaction.approved);\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} -{\" \"}\n          {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={async (newValue) => {\n          await consumerSetTransactionApproval({\n            transactionId: transaction.id,\n            newValue\n          });\n\n          consumerSetTransactionApproval({transactionId: transaction.id,\n            newValue: newValue}).then(result => console.log(\"CC \"+ result))\n          setApproved(newValue);\n          transaction.approved = approved;\n          console.log(\"set Approved: \" + newValue);\n        }}\n      />\n    </div>\n  );\n};\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA;;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,sBAAsB,EAAEC;EAHgC,CAIpD;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,WAAW,CAACI,QAAb,CAAxC;EACA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBJ,WAAW,CAACM,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBR,WAAW,CAACS,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGT,WAAW,CAACU,QAAZ,CAAqBC,SADxB,OACoCX,WAAW,CAACU,QAAZ,CAAqBE,QADzD,QACqE,GADrE,EAEGZ,WAAW,CAACa,IAFf;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eASE,QAAC,aAAD;MACE,EAAE,EAAEb,WAAW,CAACc,EADlB;MAEE,OAAO,EAAEV,QAFX;MAGE,QAAQ,EAAEH,OAHZ;MAIE,QAAQ,EAAE,MAAOc,QAAP,IAAoB;QAC5B,MAAMZ,8BAA8B,CAAC;UACnCa,aAAa,EAAEhB,WAAW,CAACc,EADQ;UAEnCC;QAFmC,CAAD,CAApC;QAKAZ,8BAA8B,CAAC;UAACa,aAAa,EAAEhB,WAAW,CAACc,EAA5B;UAC7BC,QAAQ,EAAEA;QADmB,CAAD,CAA9B,CACuBE,IADvB,CAC4BC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAY,QAAOF,MAAnB,CADtC;QAEAb,WAAW,CAACU,QAAD,CAAX;QACAf,WAAW,CAACI,QAAZ,GAAuBA,QAAvB;QACAe,OAAO,CAACC,GAAR,CAAY,mBAAmBL,QAA/B;MACD;IAfH;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAnCM;;GAAMhB,e;;KAAAA,e;AAqCb,MAAMQ,cAAc,GAAG,IAAIc,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}